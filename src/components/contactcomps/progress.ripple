import { effect, track, TrackedArray } from "ripple"
import { useToast } from "../../utils/toast.ripple"

export default component Progress() {
	const toast = useToast()

	const progress = TrackedArray.from([
		{ value: "Qualify", active: track(true) },
		{ value: "Develop", active: track(false) },
		{ value: "Propose", active: track(true) },
		{ value: "Close", active: track(true) },
	])

	let completed = track(progress.filter(p => p.@active).length)
	let percent = track((@completed / progress.length) * 100 + "%")

	effect(() => {
		completed = track(progress.filter(p => p.@active).length)
		percent = track((@completed / progress.length) * 100 + "%")
	})

	<div class="w-full max-w-3xl mx-auto mt-8 rounded-3xl p-5 sm:p-6 bg-gradient-to-tr from-[#e3ffd0] to-[#fff7e3] dark:from-zinc-800 dark:to-zinc-900 shadow-sm">

		{/* Header */}
		<div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3 mb-5">
			<div class="text-center sm:text-left">
				<h2 class="text-base font-semibold text-gray-800 dark:text-gray-100">{"Opportunity Sales Process"}</h2>
				<p class="text-xs text-gray-500 dark:text-gray-400">{"Active for 3 Days"}</p>
			</div>

			<button
				onClick={() =>
					toast({
						title: "Saved!",
						description: "Your changes have been saved successfully.",
						type: "success",
						duration: 10000,
					})
				}
				class="px-3 py-1.5 cursor-pointer bg-green-600 text-white text-xs rounded-lg shadow hover:bg-green-700 transition dark:bg-green-500 dark:hover:bg-green-600"
			>
				{"Save"}
			</button>
		</div>

		{/* Progress Bar */}
		<div class="relative flex flex-col items-center justify-center bg-white/70 dark:bg-zinc-700/60 backdrop-blur-md rounded-xl px-3 py-3 overflow-hidden border border-white/30 dark:border-zinc-600 shadow-inner">

			{/* Dynamic Fill */}
			<div class="absolute left-0 top-0 h-full bg-gradient-to-r from-[#62f7b4] via-[#3fd1ff] to-[#7ed7ff] rounded-xl transition-all duration-700" style={`width: ${@percent}`}></div>

			{/* Steps */}
			<div class="relative flex items-center justify-between w-full z-10">
				for (const p of progress) {
					<div class="flex flex-col items-center w-full">
						<div
							class={`w-7 h-7 flex items-center justify-center rounded-full font-semibold text-[12px] transition ${
								p.active
									? "bg-gradient-to-r from-[#56f1a9] to-[#43d1ff] text-white"
									: "bg-white dark:bg-zinc-800 border border-gray-300 dark:border-zinc-600 text-gray-700 dark:text-gray-200"
							}`}
							onClick={() => (p.@active = !p.@active)}
						>
							{progress.indexOf(p) + 1}
						</div>
						<span class="text-[10px] mt-1 text-gray-700 dark:text-gray-500 text-center truncate w-12">{p.value}</span>
					</div>
				}
			</div>
		</div>

		{/* Completion Info */}
		<div class="mt-3 text-center text-xs text-gray-600 dark:text-gray-400">
		</div>
	</div>
}
